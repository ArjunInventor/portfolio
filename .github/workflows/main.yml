name: CI
on:
  push:
    branches: [ prod ]
#   pull_request:
#     branches: [ prod ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Publish to Docker Registry (Service - frontend)
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ secrets.DOCKER_USERNAME }}/interstellar-frontend
        tags: "latest"
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: services/frontend
    - name: Publish to Docker Registry (Service - profile-api)
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ secrets.DOCKER_USERNAME }}/interstellar-profile-api
        tags: "latest"
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: services/profile-api
    - name: Publish to Docker Registry (Service - logs-api)
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ secrets.DOCKER_USERNAME }}/interstellar-logs-api
        tags: "latest"
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: services/logs-api
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set up kubectl
      uses: matootie/dokube@v1.3.1
      with:
        personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
        clusterName: ${{ secrets.KUBE_CLUSTER_NAME }}
        expirationTime: "300"
        version: "1.17.4"
    - uses: actions/checkout@v2
    - name: Apply configuration files 
      run: |
        cd kubernetes
        kubectl apply -f frontend_deployment.yaml
        kubectl apply -f frontend_service.yaml
        kubectl apply -f frontend_autoscaler.yaml
        kubectl scale deployment interstellar-frontend-deployment --replicas=0
        sleep 5
        kubectl scale deployment interstellar-frontend-deployment --replicas=1
        
        kubectl apply -f profile_api_deployment.yaml
        kubectl apply -f profile_api_service.yaml
        kubectl apply -f profile_api_autoscaler.yaml
        kubectl scale deployment interstellar-profile-api-deployment --replicas=0
        sleep 5
        kubectl scale deployment interstellar-profile-api-deployment --replicas=1
        
        kubectl apply -f logs_api_deployment.yaml
        kubectl apply -f logs_api_service.yaml
        kubectl apply -f logs_api_autoscaler.yaml
        kubectl scale deployment interstellar-logs-api-deployment --replicas=0
        sleep 5
        kubectl scale deployment interstellar-frontend-deployment --replicas=1
        
        kubectl apply -f ingress.yaml

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{github.event.commits[0].message}}
            
            Job Status: ${{job.status}}
            Run info: https://github.com/ArjunInventor/portfolio/actions/runs/${{github.run_id}}
            Initiated by: ${{github.actor}}

